{"version":3,"sources":["../webpack/bootstrap",".././src/components/cells/cell-label.ts",".././src/components/cells/cell.ts",".././src/components/index.ts",".././src/components/questions/question-label.ts",".././src/components/questions/question.ts",".././src/extension.ts",".././src/helpers/clean_text.ts",".././src/helpers/one_offs/one_offs.ts",".././src/helpers/one_offs/pipe.ts",".././src/helpers/one_offs/strip.ts",".././src/helpers/window.ts",".././src/insert_nums/index.ts",".././src/processSelection.ts","../external \"vscode\""],"names":[],"mappings":"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","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/extension.ts\");\n","function matchArray( arr: string[], reg: RegExp ): any[]{\n    let matches = [];\n\n    for ( let str of arr ){\n        let match = str.match( reg );\n\n        if ( !match ){\n            return [];\n        }\n\n        matches.push( match.slice(1) );\n\n    }\n\n    return matches;\n\n}\n\nexport interface Match {\n    label: string;\n    content: string;\n}\n\nexport default function CellLabelConstructor(label: string, input: string): Match[]{\n    let matches: Match[] = []\n    const input_rows = input.split(/\\r\\n|\\r|\\n/);\n\n    const re1: RegExp = /(\\d{1,4})(?:[\\.\\)\\]]{1})\\s*(.*)/\n    const reCatchAll: RegExp = /(.*)/\n\n    const matches_re1 = matchArray( input_rows, re1)\n    const matches_reCatchAll = matchArray( input_rows, reCatchAll )\n\n    if ( matches_re1 ){\n\n        matches = matches_re1.map( (el): Match => ({ label: `${label}${el[0]}`, content: el[1] }) )\n        \n    } else if ( matches_reCatchAll ){\n\n        matches = matches_reCatchAll.map( (el, idx): Match => ({ label: `${label}${idx+1}`, content: el[0] }) )\n\n    }\n\n    return matches\n\n}\n\n\n\n\n\n\n","import CellLabelConstructor, { Match } from './cell-label';\n\ntype CellType = 'row' | 'col' | 'choice' | 'case'\n\nexport default class CellConstructor{\n    type:CellType\n    extra:string = ''\n    prelabel:string = ''\n    extraCheck:RegExp | undefined = undefined\n\n    constructor(type: CellType){\n        this.type = type\n    }\n\n    run(input: string){\n\n        switch(this.type){\n            case 'row':\n                this.prelabel = 'r'\n                this.extraCheck = /(other.*?specify)/i\n                break;\n            case 'col':\n                this.prelabel = 'c'\n                break;\n            case 'choice':\n                this.prelabel = 'ch'\n                break;\n            case 'case':\n                this.prelabel = 'c'\n                break;\n            default:\n                break;\n        }\n\n        let constructed_cells: Match[] = CellLabelConstructor( this.prelabel, input );\n\n        if ( this.type === 'case' ) { constructed_cells.push({label: 'c999', content: 'BAD PIPE'}) }\n\n        let cells = constructed_cells.map( ({label, content}: Match, idx): string => {\n        \n            if ( this.type === 'row' && this.extraCheck && this.extraCheck.test(content) ){\n                this.extra = ' open=\"1\" openSize=\"25\" randomize=\"0\"'\n            }\n            if ( this.type === 'case'){\n                this.extra = ( (idx+1) === cells.length ) ? ' cond=\"1\"' : ' cond=\"\"'\n            }\n\n            return `  <${this.type} label=\"${label}\"${this.extra}>${content.trim()}</${this.type}>`\n        });\n\n    return cells.join('\\n')\n    }\n}\n","import CellConstructor from './cells/cell';\nimport QuestionConstructor from \"./questions/question\";\n\nexport {\n    CellConstructor,\n    QuestionConstructor\n};","\n\nexport default function QuestionLabelConstructor(input: string){\n    \n    const search_for_cells = /<row|<col|<choice|<style|<group|<net|<exec|<validate|\\@([^c][^\\s]*)/;\n    const search_for_comment = /\\@c\\s*/;\n    const search_for_question = /^(?:\\[)*\\s*([A-Za-z0-9_]+)\\s*(?:\\.|\\]|\\))*\\s*([^]*)$/i;\n    \n    let beginning_cells = input.search( search_for_cells );\n    beginning_cells = ( beginning_cells === -1 ) ? input.length : beginning_cells;\n\n    let question = input.substr( 0, beginning_cells );\n\n    let question_cells = input.substr( beginning_cells );\n    question = question.trim().replace(/[\\n\\r]{1,}/g, '\\n<br/><br/>\\n');\n    \n    const question_list = question.split(search_for_comment);\n    \n    let question_comment = question_list.slice(1)[0];\n    question = question.slice(0)[0];\n\n\n    let matches = question.match(search_for_question);\n\n\n    if ( !matches ){ return false; }\n\n\n    const question_label = matches[1];\n    const question_text = matches[2];\n\n    return {\n        question_cells: question_cells,\n        question_label: question_label.trim(),\n        question_text:  question_text.trim(),\n        question_comment: question_comment\n    };\n}","import QuestionLabelConstructor from './question-label';\n\n\n\nexport default class QuestionConstructor {\n    type:string;\n    extra:string = '';\n    comment:string = '';\n\n    constructor (type: string){\n        this.type = type;\n    }\n\n    run ( input: string ){\n        const question = QuestionLabelConstructor(input);\n\n        if ( !question ){ return false; }\n\n        switch(this.type){\n            case 'checkbox':\n                this.extra = ' atleast=\"1\"';\n                this.comment = 'Please select all that apply';\n                let new_cells = question.question_cells.split(/\\n/).map((line) => {\n                    let new_line;\n                    const test_dk = /none of the.*|not sure|don't know/i;\n                    if ( /<row/.test(line) && test_dk.test(line) ){\n                        new_line = line.replace(/(\\s*<row label=[^\\>]*)/, '$1 exclusive=\"1\" randomize=\"0\"');\n                        \n                        return new_line;\n                    }\n                    return line;\n                });\n                \n                question.question_cells = new_cells.join('\\n');\n                break;\n            case 'float':\n                this.extra = ' size=\"6\" optional=\"0\"';\n                break;\n            case 'number':\n                this.extra = ' size=\"6\" optional=\"0\"';\n                this.comment = 'Please enter a whole number';\n                break;\n            case 'radio':\n                this.comment = 'Please select one';\n                if ( ( question.question_cells.indexOf('<row') !== -1 ) && ( question.question_cells.search(/<col|<choice/) !== -1 ) ){\n                    this.comment = 'Please select one in each row';                    \n                } \n                break;\n            case 'select':\n                this.extra = ' optional=\"0\"';\n                break;\n            case 'text':\n                this.extra = ' size=\"40\" optional=\"0\"';\n                this.comment = 'Please be as specific as possible';\n                break;\n            case 'textarea':\n                this.extra = ' optional=\"0\"';\n                this.comment = 'Please be as specific as possible';\n                break;\n            default:\n                break;\n        }\n\n        if ( question.question_comment ){\n            this.comment = question.question_comment.trim().replace(/^\\(/g, '').replace(/[\\)\\.]*\\s*$/g, '');\n        }\n            this.comment =  `<comment>${this.comment}</comment>`;\n\n        let question_constructed = \n`<${this.type} label=\"${question.question_label}\"${this.extra}>\n  <title>${question.question_text}</title>\n  ${this.comment}\n  ${question.question_cells}\n</${this.type}>`;\n\n        return question_constructed;\n    }\n\n}\n","import { \n    ExtensionContext,\n    commands\n} from 'vscode';\nimport * as ezfv from './processSelection';\nimport InsertNums from './insert_nums'\n\n\nexport function activate(context: ExtensionContext) {\n    \n    const actions: readonly [string, () => any][] = [\n        ['extension.ezfvRow',        ezfv.row],\n        ['extension.ezfvCol',        ezfv.col],\n        ['extension.ezfvChoice',     ezfv.choice],\n        ['extension.ezfvPipe',       ezfv.pipe],\n        ['extension.ezfvRadio',      ezfv.radio],\n        ['extension.ezfvCheckbox',   ezfv.checkbox],\n        ['extension.ezfvFloat',      ezfv.float],\n        ['extension.ezfvNumber',     ezfv.number],\n        ['extension.ezfvSelect',     ezfv.select],\n        ['extension.ezfvText',       ezfv.text],\n        ['extension.ezfvTextarea',   ezfv.textarea],\n        ['extension.ezfvStrip',      ezfv.strip],\n        ['extension.ezfvInsertNums', InsertNums],\n    ];\n\n    const subs = actions.map((pair): any => {\n\n        const [name, func] = pair;\n\n        return commands.registerCommand(...pair);\n\n    });\n\n    context.subscriptions.push(...subs);\n}\n\n\n\n\n// this method is called when your extension is deactivated\nexport function deactivate() {\n}","export default function CleanText(input: string){\n    \n    let text = input.replace(/\\n{2,}/g, '\\n');\n\n    // replace(u\"\\u2019\", \"'\").\n    // replace(u\"\\u2018\", \"'\").\n    // replace(u\"\\u201C\", \"\\\"\").\n    // replace(u\"\\u201D\", \"\\\"\").\n    // replace(u\"\\u2014\", '&amp;mdash;').replace(u\"\\u2013\", '&amp;ndash;')\n    // re.sub('&\\s', '&amp; ',input)\n\n    return text;\n}","\nimport PipeConstuctor from './pipe';\nimport StripTag from './strip';\n\nexport default class OneOffPointer{\n    func_list: any;\n    func: any;\n\n    constructor(type: string){\n\n        this.func_list = {\n            pipe: PipeConstuctor,\n            strip: StripTag\n        }\n\n        this.func = this.func_list[type];\n    }\n\n    run(input: string){\n        return this.func(input);\n    }\n    \n}","import { CellConstructor } from '../../components';\n\n\nexport default function PipeConstuctor(input: string){\n    const cc = new CellConstructor('case');\n\n    let pipe_cells = cc.run(input);\n\n    let pipe = \n`<pipe label=\"\" capture=\"\">\n${pipe_cells}\n</pipe>`\n    \n    return pipe;\n}","\nexport default function StripTag(input: string) {\n    const find_label = /(<.*? label=\".*?\"[^>]*>)([^]*?)(<\\/.*?>)/ig;\n\n    return input.replace(/(\\s*<.*? label=\".*?\"[^>]*>)([^]*?)(<\\/.*?>\\s*)/ig, \"$2\\n\");\n\n}","import { window } from 'vscode'\n\n\nexport default function(){\n\n    const editor =     window.activeTextEditor\n    const document =   editor ? editor.document : undefined\n    const selections = editor ? editor.selections : undefined\n    \n\n    return {\n        window,\n        editor,\n        document,\n        selections\n    }\n}\n\n","import Window from '../helpers/window'\nimport { window, TextEditorEdit, Selection } from 'vscode';\n\n\n\nclass InsertNums{\n\n    current: any;\n    e: any;\n    sels: any;\n    alpha: boolean = false;\n    upperCase: boolean = true;\n\n    constructor(sp: any){\n        const {editor, selections} = Window()\n        this.e = editor;\n        this.sels = selections;\n\n        this.current = sp\n\n        if (isNaN(sp) && typeof(sp) === 'string'){\n            this.alpha = true\n            \n            if (sp === sp.toLocaleLowerCase()){\n                this.upperCase = false\n            }\n        }\n\n    }\n\n    alpha_to_num(l: string){\n        return l.split('').reduce((r, x) => r * 26 + parseInt(x, 36) - 9, 0) - 1;\n    }\n\n    num_to_alpha(i: number){\n        let num: any = i + 1\n        let ret: any = ''\n      \n        for (let a = 1, b = 26; (num -= a) >= 0; a = b, b *= 26) {\n          ret = String.fromCharCode(parseInt(`${(num % b) / a}`) + 65) + ret\n        }\n\n        return ret\n    }\n\n    update() {\n        try {\n            if (this.alpha){\n                const idx: number = this.alpha_to_num(this.current)\n                const alpha: string = this.num_to_alpha(idx + 1)\n                this.current = this.upperCase ? alpha.toUpperCase() : alpha.toLowerCase()\n            } else {\n                this.current = (+this.current) + 1\n            }\n        } catch (e) {\n            throw e\n        }\n    }\n\n    run(){\n        \n        this.e.edit((edit: TextEditorEdit) => {\n            this.sels.forEach((sel: Selection) => {\n                \n                edit.replace(sel, this.current.toString());\n                this.update();\n            })\n        })\n\n    }\n\n}\n\nexport default async function(){\n    const starting_point = await window.showInputBox({\n        placeHolder: 'Enter a starting point'\n    })\n\n    const insertnums = new InsertNums(starting_point);\n\n    return insertnums.run();\n}\n","import { Range } from 'vscode'\nimport CleanText from './helpers/clean_text'\nimport * as Components from './components'\nimport OneOffPointer from './helpers/one_offs/one_offs'\nimport Window from './helpers/window'\n\n\n\n\nfunction processSelection( task: any ) {\n    const {\n        editor,\n        document,\n        selections,\n        window,\n    } = Window();\n    \n    if (editor && selections && document){\n        editor.edit(( edit ) => {\n\n            selections.forEach((sel) => {\n                let txt: string = CleanText( document.getText( new Range( sel.start, sel.end ) ) ).trim();\n\n                txt = task.run( txt );\n\n                if ( txt.length ) {\n                    return edit.replace( sel, txt );\n                } else {\n                    return window.showInformationMessage('Looks like something went wrong');\n                }\n            })\n        })\n    }\n}\n\nexport const row =      () => processSelection(new Components.CellConstructor( 'row' ))\nexport const col =      () => processSelection(new Components.CellConstructor( 'col' ))\nexport const choice =   () => processSelection(new Components.CellConstructor( 'choice' ))\nexport const pipe =     () => processSelection(new OneOffPointer( 'pipe' ))\nexport const strip =    () => processSelection(new OneOffPointer( 'strip' ))\nexport const radio =    () => processSelection(new Components.QuestionConstructor( 'radio' ))\nexport const checkbox = () => processSelection(new Components.QuestionConstructor( 'checkbox' ))\nexport const float =    () => processSelection(new Components.QuestionConstructor( 'float' ))\nexport const number =   () => processSelection(new Components.QuestionConstructor( 'number' ))\nexport const select =   () => processSelection(new Components.QuestionConstructor( 'select' ))\nexport const text =     () => processSelection(new Components.QuestionConstructor( 'text' ))\nexport const textarea = () => processSelection(new Components.QuestionConstructor( 'textarea' ))\n","module.exports = require(\"vscode\");"],"sourceRoot":""}